services:
  # Microservicio de Autenticación
  autenticacion:
    image: pragmacrediya-autenticacion:latest
    container_name: pragma-autenticacion
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_R2DBC_URL=r2dbc:postgresql://db_autenticacion/crediyaseguridad
      - SPRING_R2DBC_USERNAME=crediya
      - SPRING_R2DBC_PASSWORD=crediya2025
    depends_on:
      db_autenticacion:
        condition: service_healthy
    networks:
      - pragma-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Microservicio de Solicitudes
  solicitudes:
    image: pragmacrediya-solicitudes:latest
    container_name: pragma-solicitudes
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_R2DBC_URL=r2dbc:postgresql://db_solicitudes/crediyasolicitud
      - SPRING_R2DBC_USERNAME=crediya
      - SPRING_R2DBC_PASSWORD=crediya2025
      - ADAPTERS_RESTUSER_URL=http://autenticacion:8081
    depends_on:
      db_solicitudes:
        condition: service_healthy
      autenticacion:
        condition: service_healthy
    networks:
      - pragma-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Base de datos para Autenticación
  db_autenticacion:
    image: postgres:15-alpine
    container_name: pragma-db-autenticacion
    environment:
      POSTGRES_DB: crediyaseguridad
      POSTGRES_USER: crediya
      POSTGRES_PASSWORD: crediya2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - autenticacion_data:/var/lib/postgresql/data
      - ./init-scripts/init-autenticacion.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - pragma-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crediya -d crediyaseguridad"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Base de datos para Solicitudes
  db_solicitudes:
    image: postgres:15-alpine
    container_name: pragma-db-solicitudes
    environment:
      POSTGRES_DB: crediyasolicitud
      POSTGRES_USER: crediya
      POSTGRES_PASSWORD: crediya2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - solicitudes_data:/var/lib/postgresql/data
      - ./init-scripts/init-solicitudes.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - pragma-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crediya -d crediyasolicitud"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Herramienta de administración de base de datos (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pragma-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pragma.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pragma-network
    restart: unless-stopped
    depends_on:
      - db_autenticacion
      - db_solicitudes

# Volúmenes para persistencia de datos
volumes:
  autenticacion_data:
    driver: local
  solicitudes_data:
    driver: local
  pgadmin_data:
    driver: local

# Red personalizada para comunicación entre servicios
networks:
  pragma-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
